/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.maestria.Vista.Formularios;

import com.mycompany.maestria.Controlador.ControllerDevolucion;
import com.mycompany.maestria.Controlador.ControllerPrestamo;
import com.mycompany.maestria.Modelo.AlmacenamientoPrestamo;
import com.mycompany.maestria.Modelo.Prestamo;
import com.mycompany.maestria.Modelo.Tesis;
import com.mycompany.maestria.Validaciones.ValidacionEntradas;
import com.mycompany.maestria.Vista.Componentes.Alertas;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JList;
import javax.swing.JTable;

/**
 *
 * @author omarsilverio
 */
public class FormularioTipoPrestamo extends javax.swing.JDialog {
    private Prestamo prestamo; 
    private Tesis tesis;
    private ControllerPrestamo cp; 
    private ControllerDevolucion cd;
    private JTable tablaAdeudos;
    private JList<String> listaSeleccionados;
    
   
    public FormularioTipoPrestamo(JDialog parent , Tesis tesis, ControllerPrestamo cp, JList<String> listaSeleccionados) {
        super(parent);
        this.listaSeleccionados = listaSeleccionados;
        this.tesis = tesis;      
        this.cp = cp;
        initComponents();
        ControllerPrestamo.getUnidadesDisponibles(tesis, cbUsb, cbCd, cbTomo);
        btnAgregar.setEnabled(false);
        btnRecuperar.setVisible(false);
        btnRecuperarTodo.setVisible(false);
        chFisico.setSelected(true);
        bloquearVacios();
    }  
    
    public FormularioTipoPrestamo(JDialog parent, int numero_prestamo, JTable tablaAdeudos, ControllerDevolucion cd){
        super(parent);
        prestamo = new Prestamo(numero_prestamo);  
        this.tablaAdeudos = tablaAdeudos;
        this.tesis = new Tesis(prestamo.getIdTesis());
        this.cd = cd;
        initComponents();
        ControllerPrestamo.obtenerUnidadesAlumnoAdeudo(prestamo, cbUsb, cbCd, cbTomo);        
        chFisico.setVisible(false);
        btnAgregar.setVisible(false);
        btnRecuperar.setEnabled(false);
        bloquearVacios();
    }
    public void bloquearVacios(){
        if(cbCd.getItemCount() <= 1){
            cbCd.setEnabled(false);
        }else{
            cbCd.setEnabled(true);
        }
        if(cbUsb.getItemCount() <= 1){
            cbUsb.setEnabled(false);
        }else{
             cbUsb.setEnabled(true);
        }
        if(cbTomo.getItemCount() <= 1){
            cbTomo.setEnabled(false);
        }else{
             cbTomo.setEnabled(true);
        }
    }
    public void validarEntradas(){
        if(ValidacionEntradas.isAlmacenamientoValid(cbCd,cbTomo,cbUsb)){
            if(btnRecuperar.isVisible())
                btnRecuperar.setEnabled(true);
            else if(btnAgregar.isVisible())
                btnAgregar.setEnabled(true);
        }else{
            if(btnRecuperar.isVisible())
                btnRecuperar.setEnabled(false);
            else if(btnAgregar.isVisible())
                btnAgregar.setEnabled(false);
        }
    }    
    
    public void bloquearEntradas(boolean enable){
        cbCd.setEnabled(enable);
        cbTomo.setEnabled(enable);
        cbUsb.setEnabled(enable);
    }
    
    public AlmacenamientoPrestamo getAlmacenamiento(){
        String idTesis = tesis.getIdTesis();
        int usb = cbUsb.getSelectedIndex();
        int cd = cbCd.getSelectedIndex();
        int tomo = cbTomo.getSelectedIndex();        
        boolean fisico = chFisico.isSelected();
        return new AlmacenamientoPrestamo(idTesis,usb,cd,tomo,fisico);
        
    }
    /**
     * Agrega el almacenamiento al carrito
     */
    public void agregarCarrito(){
        AlmacenamientoPrestamo prestamoAux = getAlmacenamiento();
        ((DefaultListModel)listaSeleccionados.getModel()).addElement(tesis.getIdTesis() + " " + tesis.getTitulo_tesis());
        cp.addCarrito(prestamoAux);
    }
    /**
     * Comprueba si los datos pueden agregarse
     */
    private boolean comprobarEntradas(){
       if(!ValidacionEntradas.isAlmacenamientoValid(cbCd,cbTomo,cbUsb) && chFisico.isSelected()){
             Alertas.mensajeAdvertencia(this, "¡Seleccione una unidad!");
            return false; 
        }       
        return true;
    }    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        areaFormulario = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cbUsb = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cbCd = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cbTomo = new javax.swing.JComboBox<>();
        chFisico = new javax.swing.JCheckBox();
        areaLetreros = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtLetrero = new javax.swing.JLabel();
        areaBotones = new javax.swing.JPanel();
        btnCancelar = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        btnRecuperar = new javax.swing.JButton();
        btnRecuperarTodo = new javax.swing.JButton();

        areaFormulario.setLayout(new java.awt.GridLayout(4, 4));

        jLabel3.setText("USB:");
        areaFormulario.add(jLabel3);

        cbUsb.setMaximumSize(new java.awt.Dimension(500, 32767));
        cbUsb.setMinimumSize(new java.awt.Dimension(230, 27));
        cbUsb.setPreferredSize(new java.awt.Dimension(230, 27));
        cbUsb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbUsbItemStateChanged(evt);
            }
        });
        areaFormulario.add(cbUsb);

        jLabel4.setText("CD:");
        areaFormulario.add(jLabel4);

        cbCd.setMaximumSize(new java.awt.Dimension(500, 32767));
        cbCd.setMinimumSize(new java.awt.Dimension(230, 27));
        cbCd.setPreferredSize(new java.awt.Dimension(230, 27));
        cbCd.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCdItemStateChanged(evt);
            }
        });
        areaFormulario.add(cbCd);

        jLabel5.setText("Tomo:");
        areaFormulario.add(jLabel5);

        cbTomo.setMaximumSize(new java.awt.Dimension(500, 32767));
        cbTomo.setMinimumSize(new java.awt.Dimension(230, 27));
        cbTomo.setPreferredSize(new java.awt.Dimension(230, 27));
        cbTomo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbTomoItemStateChanged(evt);
            }
        });
        areaFormulario.add(cbTomo);

        chFisico.setText("Prestamo Físico");
        chFisico.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chFisico.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chFisicoItemStateChanged(evt);
            }
        });
        areaFormulario.add(chFisico);

        getContentPane().add(areaFormulario, java.awt.BorderLayout.CENTER);

        areaLetreros.setLayout(new javax.swing.BoxLayout(areaLetreros, javax.swing.BoxLayout.Y_AXIS));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Seleccione el tipo de almacenamiento de la tesis");
        areaLetreros.add(jLabel1);

        txtLetrero.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtLetrero.setText("Disponibilidad");
        areaLetreros.add(txtLetrero);

        getContentPane().add(areaLetreros, java.awt.BorderLayout.NORTH);

        btnCancelar.setText("Cerrar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        areaBotones.add(btnCancelar);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        areaBotones.add(btnAgregar);

        btnRecuperar.setText("Recuperar");
        btnRecuperar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecuperarActionPerformed(evt);
            }
        });
        areaBotones.add(btnRecuperar);

        btnRecuperarTodo.setText("Recuperar Todo");
        btnRecuperarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecuperarTodoActionPerformed(evt);
            }
        });
        areaBotones.add(btnRecuperarTodo);

        getContentPane().add(areaBotones, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        if(comprobarEntradas()){
            agregarCarrito();
            this.dispose();
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void cbUsbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbUsbItemStateChanged
        // TODO add your handling code here:
        validarEntradas();
    }//GEN-LAST:event_cbUsbItemStateChanged

    private void cbCdItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCdItemStateChanged
        // TODO add your handling code here:
        validarEntradas();
    }//GEN-LAST:event_cbCdItemStateChanged

    private void cbTomoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbTomoItemStateChanged
        // TODO add your handling code here:
        validarEntradas();
    }//GEN-LAST:event_cbTomoItemStateChanged

    private void chFisicoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chFisicoItemStateChanged
        // TODO add your handling code here:
        if(chFisico.isSelected()){
            bloquearVacios();
        }else{
            bloquearEntradas(false);
            cbCd.setSelectedIndex(0);
            cbTomo.setSelectedIndex(0);
            cbUsb.setSelectedIndex(0);
            btnAgregar.setEnabled(true);
        }
    }//GEN-LAST:event_chFisicoItemStateChanged

    private void btnRecuperarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecuperarTodoActionPerformed
        // TODO add your handling code here:
        if(ControllerDevolucion.devolverTodasUnidades(prestamo)){    
            Alertas.mensajeExito(this, "Se recuperarón todas las unidades");            
            this.dispose();
        }else{
            Alertas.mensajeError(this, "No se pudieron recuperar las unidades");
            this.dispose();
        }
    }//GEN-LAST:event_btnRecuperarTodoActionPerformed

    private void btnRecuperarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecuperarActionPerformed
        // TODO add your handling code here:
        int usb = cbUsb.getSelectedIndex();
        int cdAl = cbCd.getSelectedIndex();
        int tomo = cbTomo.getSelectedIndex();
        if(cd.devolverUnidades(prestamo, usb, cdAl, tomo)){    
            Alertas.mensajeExito(this, "Se recuperarón las unidades");
            this.dispose();
        }else{
             Alertas.mensajeError(this, "No se pudieron recuperar las unidades");
            this.dispose();
        }
    }//GEN-LAST:event_btnRecuperarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel areaBotones;
    private javax.swing.JPanel areaFormulario;
    private javax.swing.JPanel areaLetreros;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnRecuperar;
    private javax.swing.JButton btnRecuperarTodo;
    private javax.swing.JComboBox<String> cbCd;
    private javax.swing.JComboBox<String> cbTomo;
    private javax.swing.JComboBox<String> cbUsb;
    private javax.swing.JCheckBox chFisico;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel txtLetrero;
    // End of variables declaration//GEN-END:variables
}
